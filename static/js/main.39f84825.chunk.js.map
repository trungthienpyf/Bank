{"version":3,"sources":["Components/Home/HomePage.jsx","redux/authSlice.js","redux/paymentSlice.js","redux/postSimSlice.js","redux/apiRequest.js","Components/Login/Login.jsx","firebase.jsx","Components/Register/Register.jsx","Components/NavBar/NavBar.jsx","Components/MoveMoney/MoveMoney.jsx","Components/HistoryPayment/HistoryPayment.jsx","Components/PostSim/CreateSim.jsx","CountTime/UseButtonCountdown.jsx","CountTime/UseCountdown.jsx","Modal/Modal.jsx","Modal/useModal.jsx","Components/PostSim/PostSims.jsx","CountTime/UseButtonRise.jsx","Components/PostSim/PostSim.jsx","ProtectedRoutes.jsx","ProtectedRoutesLog.jsx","Components/PostSim/PostReward.jsx","Components/PostSim/PostByUser.jsx","App.js","redux/store.js","index.js"],"names":["HomePage","user","useSelector","state","auth","login","currentUser","navigate","useNavigate","x","Number","money","toLocaleString","style","currency","useEffect","className","fullName","to","accountNumber","authSlice","createSlice","name","initialState","isFetching","error","errorMessage","register","success","moveMoney","sendMoney","reducers","sendMoneyStart","sendMoneySuccess","action","payload","sendMoneyFailed","loginStart","loginSuccess","loginFailed","logoutStart","logoutSuccess","logoutFailed","registerStart","registerSuccess","registerFailed","moveMoneyStart","moveMoneySuccess","moveMoneyFailed","moveMoneyRefresh","actions","paymentSlice","getPayments","allPayment","message","getPaymentStart","getPaymentSuccess","getPaymentFailed","account","postSimSlice","storePost","getAllPost","allPostSim","getAllPostStart","getAllPostSuccess","getAllPostFailed","storePostStart","storePostSuccess","storePostFailed","loginUser","dispatch","a","axios","post","res","data","errors","console","log","registerUser","re","firstMoney","sum","getAllPayment","showToast","get","showEach","then","response","catch","list","Login","useState","username","setUsername","password","setPassword","useDispatch","isLoad","class","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","authentication","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","Register","flag","setFlag","token","setToken","errorToken","setErrorToken","errorPhone","setErrorPhone","checkPhone","phone","formik","useFormik","initialValues","identityNumber","validationSchema","Yup","min","required","matches","values","k","window","recaptchaVerifier","RecaptchaVerifier","size","callback","appVerifier","signInWithPhoneNumber","slice","confirmationResult","length","confirm","result","id","handleSubmit","handleChange","touched","Array","isArray","NavBar","handleLogout","onClick","MoveMoney","isShowGetCode","isShowCheck","status","setStatus","isSuccess","setIsSuccess","flagStk","setFlagStk","flagMoney","setFlagMoney","stk","setStk","setMoney","setData","desc","setDesc","errorMoney","setErrorMoney","errorStk","setErrorStk","reg","getAllUser","filter","i","handleChangeMoney","test","trim","newUser2","fromAc","amount","toAc","toast","newUser","options","isSearchable","item","readOnly","renderText","HistoryPayment","listPayment","payment","renderMoney","m","Object","keys","map","content","fromAcc","fullNameTo","fullNameFr","description","CreateSim","load","postSim","nameSim","setNameSim","amountStart","setAmountStart","flagAmount","setFlagAmount","flagSim","setFlagSim","errorSim","setErrorSim","errorAmount","setErrorAmount","timeSession","setTimeSession","regexPhone","handleChangeSim","handleChangeAmount","user_id","getReturnValues","countDown","setIdRoom","changeData","sim","setUserID","Math","floor","UseButtonCountdown","targetDate","winner","countDownDate","Date","getTime","setCountDown","interval","setInterval","clearInterval","undefined","hours","minutes","seconds","toString","padStart","UseCountdown","props","increaseTime","Modal","isShowing","hide","idRoom","userID","OTP","setOTP","ErrorOTP","setErrorOTP","ReactDOM","createPortal","Fragment","tabIndex","role","isAccess","authCode","document","body","useModal","setIsShowing","toggle","ids","setID","setUserId","PostSims","useLocation","convertMoney","convertTime","CREATED_TIME","TIME_EXPIRE","created_at","sumAmount","winnerName","timeClick","disabled","UseButtonRise","margin","PostSim","io","require","params","useParams","listMsg","setListMsg","setIsLoad","setMoneyCurrent","setAmount","setTimeClick","setIncreaseTime","setTimeout","post_id","findMoney","find","echo","Echo","broadcaster","channel","listen","time","oldArray","check","forEach","parseInt","for","ProtectedRoutes","ProtectedRoutesLog","PostReward","getPostUser","PostByUser","App","element","path","persistConfig","key","version","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","render","loading","getElementById"],"mappings":"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","file":"static/js/main.39f84825.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./home.css\";\n\nconst HomePage = () => {\n  //DUMMY DATA\n  const user = useSelector((state) => state.auth.login?.currentUser);\n  const navigate = useNavigate();\n  var x = Number(user?.money).toLocaleString(\"it-IT\", {\n    style: \"currency\",\n    currency: \"VND\",\n  });\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  return (\n    <>\n      <ToastContainer />\n      {user ? (\n        <div className=\"home-top home-padding\">{user.fullName} </div>\n      ) : (\n        \"\"\n      )}\n\n      <div className=\"home-page-main\">\n        <div className=\"home-page-width\">\n          <div className=\"home-row\">\n            <div className=\"home-col \">\n              <Link to=\"/move-money\">\n                <button className=\"home-btn\">Chuyển tiền</button>\n              </Link>\n            </div>\n            <div className=\"home-col\">\n              <Link to=\"/history-payment\">\n                <button className=\"home-btn\">Lịch sử giao dịch</button>\n              </Link>\n            </div>\n          </div>\n          <div className=\"home-row\">\n            <div className=\"home-col\">\n              <Link to=\"/post-sim\">\n                <button className=\"home-btn\">Đấu giá sim</button>\n              </Link>\n            </div>\n            <div className=\"home-col\">\n              <button className=\"home-btn\"> Vé số</button>\n            </div>\n          </div>\n          <button className=\"button-page-home\">\n            <div className=\"home-row-2\">\n              <div className=\"\">\n                <div className=\"text-start\">Tài khoản chính</div>\n                <div className=\"text-start\">\n                  <span>số tài khoản: {user?.accountNumber}</span>\n                </div>\n              </div>\n              <div className=\"home-col-d-column\">{x}</div>\n            </div>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    login: {\r\n      currentUser: null,\r\n      isFetching: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n\r\n    register: {\r\n      isFetching: false,\r\n      error: false,\r\n      success: false,\r\n      errorMessage: null,\r\n    },\r\n    moveMoney: {\r\n      isFetching: false,\r\n      error: false,\r\n      success: false,\r\n      errorMessage: null,\r\n    },\r\n    sendMoney: {\r\n      isFetching: false,\r\n      error: false,\r\n      success: false,\r\n      errorMessage: \"\",\r\n    },\r\n  },\r\n  reducers: {\r\n    sendMoneyStart: (state) => {\r\n      state.sendMoney.isFetching = true;\r\n    },\r\n    sendMoneySuccess: (state, action) => {\r\n      state.sendMoney.isFetching = false;\r\n      state.sendMoney.success = true;\r\n      state.login.currentUser.money = action.payload;\r\n      state.sendMoney.error = false;\r\n    },\r\n    sendMoneyFailed: (state, action) => {\r\n      state.sendMoney.error = true;\r\n      state.sendMoney.isFetching = false;\r\n      state.sendMoney.success = false;\r\n      state.sendMoney.errorMessage = action.payload;\r\n    },\r\n    loginStart: (state) => {\r\n      state.login.isFetching = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.login.isFetching = false;\r\n      state.login.currentUser = action.payload;\r\n      state.login.error = false;\r\n      state.login.errorMessage = \"\";\r\n    },\r\n    loginFailed: (state, action) => {\r\n      state.login.error = true;\r\n      state.login.isFetching = false;\r\n      state.login.errorMessage = action.payload;\r\n    },\r\n    logoutStart: (state) => {\r\n      state.login.isFetching = true;\r\n    },\r\n    logoutSuccess: (state) => {\r\n      state.login.isFetching = false;\r\n      state.login.currentUser = null;\r\n    },\r\n    logoutFailed: (state) => {\r\n      state.login.error = true;\r\n      state.login.isFetching = false;\r\n    },\r\n    registerStart: (state) => {\r\n      state.register.isFetching = true;\r\n    },\r\n    registerSuccess: (state) => {\r\n      state.register.isFetching = false;\r\n      state.register.success = true;\r\n\r\n      state.register.error = false;\r\n    },\r\n    registerFailed: (state, action) => {\r\n      state.register.error = true;\r\n      state.register.isFetching = false;\r\n      state.register.success = false;\r\n      state.register.errorMessage = action.payload;\r\n    },\r\n    moveMoneyStart: (state) => {\r\n      state.moveMoney.isFetching = true;\r\n    },\r\n    moveMoneySuccess: (state) => {\r\n      state.moveMoney.isFetching = false;\r\n      state.moveMoney.success = true;\r\n\r\n      state.moveMoney.error = false;\r\n    },\r\n    moveMoneyFailed: (state, action) => {\r\n      state.moveMoney.error = true;\r\n      state.moveMoney.isFetching = false;\r\n      state.moveMoney.success = false;\r\n      state.moveMoney.errorMessage = action.payload;\r\n    },\r\n    moveMoneyRefresh: (state) => {\r\n      state.moveMoney.errorMessage = null;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  loginStart,\r\n  loginFailed,\r\n  loginSuccess,\r\n  registerFailed,\r\n  registerSuccess,\r\n  registerStart,\r\n  moveMoneySuccess,\r\n  moveMoneyFailed,\r\n  moveMoneyStart,\r\n  sendMoneySuccess,\r\n  sendMoneyFailed,\r\n  sendMoneyStart,\r\n  moveMoneyRefresh,\r\n  logoutStart,\r\n  logoutSuccess,\r\n  logoutFailed,\r\n} = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst paymentSlice = createSlice({\r\n  name: \"payment\",\r\n  initialState: {\r\n    getPayments: {\r\n      allPayment: null,\r\n      isFetching: false,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  },\r\n  reducers: {\r\n    getPaymentStart: (state) => {\r\n      state.getPayments.isFetching = true;\r\n    },\r\n    getPaymentSuccess: (state, action) => {\r\n      state.getPayments.isFetching = false;\r\n      state.getPayments.allPayment = action.payload;\r\n      state.getPayments.error = \"\";\r\n    },\r\n    getPaymentFailed: (state, account) => {\r\n      state.getPayments.isFetching = false;\r\n      state.getPayments.error = true;\r\n      state.getPayments.message = account.payload;\r\n    },\r\n  },\r\n});\r\nexport const { getPaymentStart, getPaymentSuccess, getPaymentFailed } =\r\n  paymentSlice.actions;\r\nexport default paymentSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst postSimSlice = createSlice({\r\n  name: \"postSim\",\r\n  initialState: {\r\n    storePost: {\r\n      isFetching: false,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    getAllPost: {\r\n      allPostSim: null,\r\n      isFetching: false,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  },\r\n  reducers: {\r\n    getAllPostStart: (state) => {\r\n      state.getAllPost.isFetching = true;\r\n    },\r\n    getAllPostSuccess: (state, action) => {\r\n      state.getAllPost.isFetching = false;\r\n      state.getAllPost.allPostSim = action.payload;\r\n      state.getAllPost.error = \"\";\r\n    },\r\n    getAllPostFailed: (state, account) => {\r\n      state.getAllPost.isFetching = false;\r\n      state.getAllPost.error = true;\r\n      state.getAllPost.message = account.payload;\r\n    },\r\n    storePostStart: (state) => {\r\n      state.storePost.isFetching = true;\r\n    },\r\n    storePostSuccess: (state, action) => {\r\n      state.storePost.isFetching = false;\r\n      state.storePost.allPayment = action.payload;\r\n      state.storePost.error = \"\";\r\n    },\r\n    storePostFailed: (state, account) => {\r\n      state.storePost.isFetching = false;\r\n      state.storePost.error = true;\r\n      state.storePost.message = account.payload;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  storePostStart,\r\n  storePostSuccess,\r\n  storePostFailed,\r\n  getAllPostStart,\r\n  getAllPostSuccess,\r\n  getAllPostFailed,\r\n} = postSimSlice.actions;\r\nexport default postSimSlice.reducer;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  loginFailed,\r\n  loginStart,\r\n  loginSuccess,\r\n  moveMoneyFailed,\r\n  moveMoneyStart,\r\n  moveMoneySuccess,\r\n  registerFailed,\r\n  registerStart,\r\n  registerSuccess,\r\n  sendMoneyFailed,\r\n  sendMoneyStart,\r\n  sendMoneySuccess,\r\n} from \"./authSlice\";\r\nimport {\r\n  getPaymentFailed,\r\n  getPaymentStart,\r\n  getPaymentSuccess,\r\n} from \"./paymentSlice\";\r\nimport {\r\n  getAllPostFailed,\r\n  getAllPostStart,\r\n  getAllPostSuccess,\r\n  storePostFailed,\r\n  storePostStart,\r\n  storePostSuccess,\r\n} from \"./postSimSlice\";\r\n\r\nexport const loginUser = async (user, dispatch, navigate) => {\r\n  dispatch(loginStart());\r\n  try {\r\n    const res = await axios.post(\"https://mfw060.wcom.vn/api/login\", user);\r\n\r\n    if (res.data.errors) {\r\n      console.log(res.data.errors);\r\n      throw res.data.errors;\r\n    }\r\n    dispatch(loginSuccess(res.data));\r\n    navigate(\"/\");\r\n  } catch (error) {\r\n    if (error.message) dispatch(loginFailed(error.message));\r\n    else dispatch(loginFailed(error));\r\n  }\r\n};\r\nexport const registerUser = async (user, dispatch, navigate) => {\r\n  dispatch(registerStart());\r\n  try {\r\n    const re = await axios.post(\"https://mfw060.wcom.vn/api/register\", user);\r\n    if (re.data.data) {\r\n      console.log(re.data);\r\n      throw re.data;\r\n    }\r\n    if (re.data.errors) {\r\n      console.log(re.data.errors);\r\n      throw re.data.errors;\r\n    }\r\n\r\n    dispatch(registerSuccess());\r\n    navigate(\"/login\");\r\n  } catch (error) {\r\n    if (error.data) dispatch(registerFailed(error.data));\r\n    else if (error.message) {\r\n      dispatch(registerFailed(error.message));\r\n    } else dispatch(registerFailed(error));\r\n  }\r\n};\r\nexport const moveMoney = async (user, dispatch) => {\r\n  dispatch(moveMoneyStart());\r\n  try {\r\n    const re = await axios.post(\"https://mfw060.wcom.vn/api/getCode\", user);\r\n    if (re.data.data) {\r\n      console.log(re.data);\r\n\r\n      throw re.data;\r\n    }\r\n    if (re.data.errors) {\r\n      console.log(re.data.errors);\r\n      throw re.data.errors;\r\n    }\r\n\r\n    dispatch(moveMoneySuccess());\r\n  } catch (error) {\r\n    if (error.data) dispatch(moveMoneyFailed(error.data));\r\n    else if (error.message) dispatch(moveMoneyFailed(error.message));\r\n    else dispatch(moveMoneyFailed(error));\r\n    return false;\r\n  }\r\n};\r\nexport const sendMoney = async (user, dispatch, navigate, firstMoney) => {\r\n  try {\r\n    const re = await axios.post(\"https://mfw060.wcom.vn/api/checkCode\", user);\r\n\r\n    if (re.data.errors) {\r\n      console.log(re.data.errors);\r\n      throw re.data.errors;\r\n    }\r\n    console.log(re.data);\r\n    let sum = firstMoney - re.data;\r\n\r\n    dispatch(sendMoneySuccess(sum));\r\n  } catch (error) {\r\n    if (error.message) dispatch(sendMoneyFailed(error.message));\r\n    else dispatch(sendMoneyFailed(error));\r\n  }\r\n};\r\n\r\nexport const getAllPayment = async (user, dispatch) => {\r\n  dispatch(getPaymentStart());\r\n  try {\r\n    const re = await axios.post(\"https://mfw060.wcom.vn/api/getHistory\", user);\r\n\r\n    if (re.data.errors) {\r\n      console.log(re.data.errors);\r\n      throw re.data.errors;\r\n    }\r\n\r\n    dispatch(getPaymentSuccess(re.data));\r\n  } catch (error) {\r\n    if (error.message) dispatch(getPaymentFailed(error.message));\r\n    else dispatch(getPaymentFailed(error));\r\n  }\r\n};\r\n\r\nexport const storePost = async (user, dispatch, navigate) => {\r\n  dispatch(storePostStart());\r\n  try {\r\n    const re = await axios.post(\"https://mfw060.wcom.vn/api/storePost\", user);\r\n\r\n    if (re.data.errors) {\r\n      console.log(re.data.errors);\r\n      throw re.data.errors;\r\n    }\r\n\r\n    dispatch(storePostSuccess(re.data));\r\n\r\n    navigate(\"/post-sim\", { state: { showToast: true } });\r\n  } catch (error) {\r\n    if (error.message) dispatch(storePostFailed(error.message));\r\n    else dispatch(storePostFailed(error));\r\n  }\r\n};\r\nexport const getAllPost = async (dispatch) => {\r\n  dispatch(getAllPostStart());\r\n  try {\r\n    const re = await axios.get(\"https://mfw060.wcom.vn/api/getAllPost\");\r\n\r\n    if (re.data.errors) {\r\n      console.log(re.data.errors);\r\n      throw re.data.errors;\r\n    }\r\n\r\n    dispatch(getAllPostSuccess(re.data));\r\n    return re.data;\r\n  } catch (error) {\r\n    if (error.message) dispatch(getAllPostFailed(error.message));\r\n    else dispatch(getAllPostFailed(error));\r\n  }\r\n};\r\nexport const showEach = async (data) => {\r\n  const list = await axios\r\n    .post(\"https://mfw060.wcom.vn/api/show\", data)\r\n    .then(function (response) {\r\n      return response.data;\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n  return list;\r\n};\r\n","import \"./login.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from \"../../redux/apiRequest\";\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const errorMessage = useSelector((state) => state.auth.login.errorMessage);\n  const isLoad = useSelector((state) => state.auth.login.isFetching);\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const newUser = {\n      username: username,\n      password: password,\n    };\n    loginUser(newUser, dispatch, navigate);\n  };\n\n  return (\n    <>\n      {isLoad ? (\n        <div className=\"heigh-main\">\n          <div class=\"loader \">Loading... </div>\n        </div>\n      ) : (\n        <section className=\"login-container\">\n          <div className=\"login-title\"> Đăng nhập</div>\n          <form onSubmit={handleLogin}>\n            <label>Tài khoản</label>\n            <input\n              type=\"text\"\n              placeholder=\"Nhập tài khoản\"\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <label>Mật khẩu</label>\n            <input\n              type=\"password\"\n              placeholder=\"Nhập mật khẩu\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <small class=\"register-error\">{errorMessage}</small>\n            <button type=\"submit\"> Đăng nhập </button>\n          </form>\n          <div className=\"login-register\"> Bạn đã có tài khoản chưa? </div>\n          <Link className=\"login-register-link\" to=\"/register\">\n            Đăng ký ngay\n          </Link>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAsOjSG0P2Uk7BpyMMDs3yewjE-zPhedEw\",\r\n  authDomain: \"fir-otp-701da.firebaseapp.com\",\r\n  projectId: \"fir-otp-701da\",\r\n  storageBucket: \"fir-otp-701da.appspot.com\",\r\n  messagingSenderId: \"208802329885\",\r\n  appId: \"1:208802329885:web:3030133cb425e4179a5df4\",\r\n  measurementId: \"G-4HPSWR7PLT\",\r\n};\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const authentication = getAuth();\r\n","import \"./register.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../../redux/apiRequest\";\nimport { useFormik } from \"formik\";\nimport { authentication } from \"../../firebase\";\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const errorMessage = useSelector(\n    (state) => state.auth.register?.errorMessage\n  );\n  const isLoad = useSelector((state) => state.auth.register?.isFetching);\n  const [flag, setFlag] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [errorToken, setErrorToken] = useState(\"\");\n  const [errorPhone, setErrorPhone] = useState(\"\");\n\n  const checkPhone = async (phone) => {\n    return await axios.post(\"https://mfw060.wcom.vn/api/checkPhone\", {\n      phone: phone,\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: \"\",\n      username: \"\",\n      password: \"\",\n      identityNumber: \"\",\n      phone: \"\",\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string()\n        .min(5, \"Tên không được ít hơn 5 kí tự\")\n        .required(\"Bạn phải điền tên\")\n        .matches(/^([^0-9]*)$/, \"Tên không chứa số\"),\n      username: Yup.string()\n        .required(\"Bạn phải điền tài khoản\")\n        .min(6, \"Tài khoản không được ít hơn 5 kí tự\"),\n      password: Yup.string()\n        .min(8, \"Mật khẩu không được ít hơn 8 kí tự\")\n        .required(\"Bạn phải điền mật khẩu\"),\n      identityNumber: Yup.string()\n        .min(8, \"Số căn cước không được ít hơn 8 kí tự\")\n        .required(\"Bạn phải điền cccd\")\n        .matches(/^\\d+$/, \"Căn cước không chứa kí tự\"),\n      phone: Yup.string()\n        .required(\"Bạn phải điền số điện thoại\")\n        .matches(\n          /(09|01|03|07|08)[0-9]{8}$/,\n          \"Vui lòng nhập đúng số điện thoại\"\n        ),\n    }),\n    onSubmit: (values) => {\n      setErrorPhone(\"\");\n      checkPhone(values.phone).then((k) => {\n        if (k.data == \"00\") {\n          setFlag(true);\n          window.recaptchaVerifier = new RecaptchaVerifier(\n            \"recapcha\",\n            {\n              size: \"invisible\",\n              callback: (response) => {\n                // reCAPTCHA solved, allow signInWithPhoneNumber.\n              },\n            },\n            authentication\n          );\n\n          let appVerifier = window.recaptchaVerifier;\n          signInWithPhoneNumber(\n            authentication,\n            \"+84\" + values.phone.slice(1),\n            appVerifier\n          )\n            .then((confirmationResult) => {\n              window.confirmationResult = confirmationResult;\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        } else {\n          setErrorPhone(\"Số điện thoại đã tồn tại trong hệ thống\");\n        }\n      });\n\n      if (token.length == 6) {\n        let confirmationResult = window.confirmationResult;\n        confirmationResult\n          .confirm(token)\n          .then((result) => {\n            console.log(\"thanh cong\");\n\n            registerUser(values, dispatch, navigate);\n          })\n          .catch((error) => {\n            setErrorToken(\"Nhập sai mã OTP\");\n          });\n      }\n    },\n  });\n\n  return (\n    <>\n      <div id=\"recapcha\"></div>\n      {isLoad ? (\n        <div className=\"heigh-main\">\n          <div class=\"loader \">Loading... </div>\n        </div>\n      ) : (\n        <section className=\"register-container\">\n          <div className=\"login-title\"> Đăng ký </div>\n          <form onSubmit={formik.handleSubmit}>\n            <label>Họ và tên</label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your họ và tên\"\n              name=\"fullName\"\n              value={formik.values.fullName}\n              onChange={formik.handleChange}\n            />\n            {formik.errors.fullName && formik.touched.fullName && (\n              <small className=\"register-error\">{formik.errors.fullName}</small>\n            )}\n            <label>Tài khoản</label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your tài khoản\"\n              name=\"username\"\n              value={formik.values.username}\n              onChange={formik.handleChange}\n            />\n            {formik.errors.username && formik.touched.username && (\n              <small className=\"register-error\">{formik.errors.username}</small>\n            )}\n            <small className=\"register-error\">\n              {\" \"}\n              {Array.isArray(errorMessage?.username)\n                ? errorMessage?.username[0]\n                : errorMessage}\n            </small>\n            <label>Mật khẩu</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your mật khẩu\"\n              onChange={formik.handleChange}\n            />\n            {formik.errors.password && formik.touched.password && (\n              <small className=\"register-error\">{formik.errors.password}</small>\n            )}\n            <label>Số căn cước</label>\n            <input\n              type=\"text\"\n              name=\"identityNumber\"\n              placeholder=\"Enter your số căn cước\"\n              value={formik.values.identityNumber}\n              onChange={formik.handleChange}\n            />\n            {formik.errors.identityNumber && formik.touched.identityNumber && (\n              <small className=\"register-error\">\n                {formik.errors.identityNumber}\n              </small>\n            )}\n            <label>Số điện thoại</label>\n            <input\n              type=\"text\"\n              placeholder=\"Vui lòng nhập điện thoại\"\n              name=\"phone\"\n              value={formik.values.phone}\n              onChange={formik.handleChange}\n            />\n            {formik.errors.phone && formik.touched.phone && (\n              <small className=\"register-error\">{formik.errors.phone}</small>\n            )}\n            <small className=\"register-error\">\n              {Array.isArray(errorMessage?.phone)\n                ? errorMessage.phone[0]\n                : errorMessage}\n            </small>\n            {errorPhone && (\n              <small className=\"register-error\">{errorPhone}</small>\n            )}{\" \"}\n            {!flag ? (\n              \"\"\n            ) : (\n              <>\n                {\" \"}\n                <label>\n                  Chúng tôi đã gửi mã OTP đến số điện thoại{\" \"}\n                  {formik.values.phone}\n                </label>\n                <input\n                  className=\"full-width input-payment p-1\"\n                  placeholder=\"Nhập code để xác minh\"\n                  id=\"otp\"\n                  onChange={(e) => setToken(e.target.value)}\n                />\n                {errorToken && (\n                  <small className=\"register-error\">{errorToken}</small>\n                )}{\" \"}\n              </>\n            )}\n            <button type=\"submit\"> Đăng ký </button>\n          </form>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { logoutStart, logoutSuccess } from \"../../redux/authSlice\";\nimport \"./navbar.css\";\nconst NavBar = () => {\n  const user = useSelector((state) => state.auth.login?.currentUser);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleLogout = async () => {\n    await dispatch(logoutSuccess());\n    navigate(\"/login\");\n  };\n  return (\n    <nav className=\"navbar-container\">\n      <div className=\"font-big\">BankBank</div>{\" \"}\n      {user ? (\n        <>\n          <div className=\"d-flex\">\n            <Link to=\"/\" className=\"navbar-home\">\n              {\" \"}\n              Trang chủ{\" \"}\n            </Link>\n            <p className=\"navbar-user\">\n              Xin chào, <span> {user.fullName} </span>{\" \"}\n            </p>\n            <Link to=\"/logout\" className=\"navbar-logout\" onClick={handleLogout}>\n              {\" \"}\n              Đăng xuất\n            </Link>\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"d-flex\">\n            <Link to=\"/login\" className=\"navbar-login\">\n              {\" \"}\n              Đăng nhập{\" \"}\n            </Link>\n            <Link to=\"/register\" className=\"navbar-register\">\n              {\" \"}\n              Đăng ký\n            </Link>\n          </div>\n        </>\n      )}{\" \"}\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { moveMoney, sendMoney } from \"../../redux/apiRequest\";\r\nimport { authentication } from \"../../firebase\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nimport \"./moveMoney.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  moveMoneyRefresh,\r\n  moveMoneyStart,\r\n  sendMoneyStart,\r\n} from \"../../redux/authSlice\";\r\nimport ReactSelect from \"react-select\";\r\nimport axios from \"axios\";\r\n\r\nconst MoveMoney = () => {\r\n  //DUMMY DATA\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n  const errorMessage = useSelector(\r\n    (state) => state.auth.moveMoney?.errorMessage\r\n  );\r\n  const isShowGetCode = useSelector(\r\n    (state) => state.auth.moveMoney?.isFetching\r\n  );\r\n  console.log(isShowGetCode);\r\n  const isShowCheck = useSelector((state) => state.auth.sendMoney?.isFetching);\r\n\r\n  const errorMessageMoney = useSelector(\r\n    (state) => state.auth.sendMoney?.errorMessage\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  //const status = useSelector((state) => state.auth.MoveMoney?.success);\r\n  const [status, setStatus] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [flagStk, setFlagStk] = useState(false);\r\n  const [flagMoney, setFlagMoney] = useState(false);\r\n  const [stk, setStk] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  const [money, setMoney] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [errorMoney, setErrorMoney] = useState(\"\");\r\n  const [errorStk, setErrorStk] = useState(\"\");\r\n  const [errorToken, setErrorToken] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  var reg = /^\\d+$/;\r\n  const getAllUser = async () => {\r\n    return await axios.get(\"https://mfw060.wcom.vn/api/getAllUser\");\r\n  };\r\n  useEffect(() => {\r\n    getAllUser().then((k) => {\r\n      setData(k.data.filter((i) => i.id !== user.id));\r\n    });\r\n  }, []);\r\n\r\n  const handleChangeMoney = (e) => {\r\n    setErrorMoney(\"\");\r\n    if (user.money < e.target.value) {\r\n      setFlagMoney(false);\r\n      setErrorMoney(\"Số tiền không đủ\");\r\n    } else if (!reg.test(e.target.value)) {\r\n      setFlagMoney(false);\r\n      setErrorMoney(\"Không nhập kí tự chữ\");\r\n    } else if (e.target.value.trim().length == 0) {\r\n      setFlagMoney(false);\r\n      setErrorMoney(\"Không được để trống\");\r\n    } else if (e.target.value.length < 5) {\r\n      setFlagMoney(false);\r\n      setErrorMoney(\"Số tiền phải lớn hơn 10.000VND\");\r\n    } else setFlagMoney(true);\r\n    setMoney(e.target.value);\r\n  };\r\n\r\n  const handleChangeStk = (e) => {\r\n    setErrorStk(\"\");\r\n    dispatch(moveMoneyRefresh());\r\n    if (!reg.test(e.value)) {\r\n      setFlagStk(false);\r\n      setErrorStk(\"Không nhập kí tự chữ\");\r\n    } else if (e.value.trim().length == 0) {\r\n      setFlagStk(false);\r\n      setErrorStk(\"Không được để trống\");\r\n    } else if (e.value == user.accountNumber) {\r\n      setFlagStk(false);\r\n      setErrorStk(\"Vui lòng nhập số tài khoản khác\");\r\n    } else setFlagStk(true);\r\n\r\n    setStk(e.value);\r\n    console.log(e.value);\r\n  };\r\n\r\n  const handleMoveMoney = (e) => {\r\n    e.preventDefault();\r\n    if (stk.length == 0) {\r\n      setFlagStk(false);\r\n      setErrorStk(\"Không được để trống\");\r\n    }\r\n    if (money.length == 0) {\r\n      setFlagMoney(false);\r\n      setErrorMoney(\"Không được để trống\");\r\n    }\r\n\r\n    if (flagStk && flagMoney) {\r\n      if (!status) {\r\n        dispatch(moveMoneyStart);\r\n        window.recaptchaVerifier = new RecaptchaVerifier(\r\n          \"recapcha\",\r\n          {\r\n            size: \"invisible\",\r\n            callback: (response) => {\r\n              // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n            },\r\n          },\r\n          authentication\r\n        );\r\n        const newUser = {\r\n          id: user.id,\r\n          toAc: stk,\r\n        };\r\n        moveMoney(newUser, dispatch, navigate).then((i) => {\r\n          if (i == false) {\r\n            setStatus(false);\r\n          } else {\r\n            let appVerifier = window.recaptchaVerifier;\r\n            signInWithPhoneNumber(\r\n              authentication,\r\n              \"+84\" + user.phone.slice(1),\r\n\r\n              appVerifier\r\n            )\r\n              .then((confirmationResult) => {\r\n                window.confirmationResult = confirmationResult;\r\n                setStatus(true);\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          }\r\n        });\r\n      } else {\r\n        if (token.length == 6) {\r\n          let confirmationResult = window.confirmationResult;\r\n          confirmationResult\r\n            .confirm(token)\r\n            .then((result) => {\r\n              // const user = result.user;\r\n              // console.log(user);\r\n              console.log(\"thanh cong\");\r\n              const newUser2 = {\r\n                id: user.id,\r\n                fromAc: user.accountNumber,\r\n                token,\r\n                amount: money,\r\n                desc,\r\n                toAc: stk,\r\n              };\r\n              sendMoney(newUser2, dispatch, navigate, user.money);\r\n              setIsSuccess(true);\r\n              toast.success(\"Giao dịch thành công\");\r\n            })\r\n            .catch((error) => {\r\n              setErrorToken(\"Nhập mã sai\");\r\n            });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderText = () => {\r\n    if (isShowGetCode) {\r\n      return (\r\n        <div className=\"heigh-main\">\r\n          <div class=\"loader \">Loading... </div>\r\n        </div>\r\n      );\r\n    } else if (isShowCheck) {\r\n      return (\r\n        <div className=\"heigh-main\">\r\n          <div class=\"loader \">Loading... </div>\r\n        </div>\r\n      );\r\n    }\r\n    const renderReadonly = () => {\r\n      if (status) return \"readonly\";\r\n    };\r\n    return (\r\n      <div className=\"form-padding\">\r\n        <label className=\"f-left\">\r\n          {isSuccess ? \"Đến số tài khoản\" : \"Số tài khoản \"}\r\n        </label>\r\n\r\n        <ReactSelect\r\n          options={data}\r\n          isSearchable={true}\r\n          placeholder=\"Nhập số tài khoản\"\r\n          onChange={(item) => handleChangeStk(item)}\r\n          readOnly={status}\r\n        />\r\n\r\n        {errorStk && <small className=\"register-error\">{errorStk}</small>}\r\n\r\n        {Array.isArray(errorMessage?.toAc)\r\n          ? errorMessage?.toAc[0]\r\n          : errorMessage}\r\n        <label className=\"f-left\">\r\n          {\" \"}\r\n          {isSuccess ? \"Số tiền gửi\" : \"Số tiền\"}\r\n        </label>\r\n        <input\r\n          className=\"full-width input-payment\"\r\n          placeholder=\"Số tiền (VND)\"\r\n          onChange={handleChangeMoney}\r\n          readOnly={status}\r\n          value={money}\r\n        />\r\n\r\n        {errorMoney && <small className=\"register-error\">{errorMoney}</small>}\r\n        <label className=\"f-left\">Mô tả</label>\r\n        <textarea\r\n          className=\"full-width input-payment text-area-height\"\r\n          placeholder=\"Mô tả\"\r\n          onChange={(e) => setDesc(e.target.value)}\r\n          readOnly={status}\r\n          value={desc}\r\n        ></textarea>\r\n        {status ? (\r\n          <div>\r\n            {isSuccess ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                {\" \"}\r\n                <label>\r\n                  Chúng tôi đã gửi mã OTP đến số điện thoại {user.phone}\r\n                </label>\r\n                <input\r\n                  className=\"full-width input-payment\"\r\n                  placeholder=\"Nhập code để xác minh\"\r\n                  id=\"otp\"\r\n                  onChange={(e) => setToken(e.target.value)}\r\n                />\r\n                {errorToken && (\r\n                  <small className=\"register-error\">{errorToken}</small>\r\n                )}{\" \"}\r\n              </>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"home-row around-between\">\r\n          {isSuccess ? (\r\n            <button className=\"full-width m-1 \" type=\"button\">\r\n              <Link to=\"/\" className=\"reset-tag-a\">\r\n                Quay lại\r\n              </Link>\r\n            </button>\r\n          ) : (\r\n            <>\r\n              {status ? (\r\n                <button\r\n                  className=\"full-width m-1 \"\r\n                  type=\"button\"\r\n                  onClick={(e) => setStatus(false)}\r\n                >\r\n                  Quay lại\r\n                </button>\r\n              ) : (\r\n                <button className=\"full-width m-1 \" type=\"button\">\r\n                  <Link to=\"/\" className=\"reset-tag-a\">\r\n                    Quay lại\r\n                  </Link>\r\n                </button>\r\n              )}\r\n\r\n              <button className=\"full-width m-1 \" type=\"submit\">\r\n                {status ? \"Chuyển tiền\" : \"Tiếp tục\"}\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {user ? (\r\n        <div className=\"home-top home-padding\">{user.fullName} </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"home-page-main\">\r\n        <div className=\"home-page-width1 mt-2 \">\r\n          <h3>{isSuccess ? \"Giao dịch thành công\" : \"Chuyển tiền\"} </h3>\r\n          <form className=\"form-padding \" onSubmit={handleMoveMoney}>\r\n            {renderText()}\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div id=\"recapcha\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoveMoney;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { getAllPayment, moveMoney, sendMoney } from \"../../redux/apiRequest\";\r\nimport \"./historyPayment.css\";\r\n\r\nconst HistoryPayment = () => {\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const listPayment = useSelector(\r\n    (state) => state.payment.getPayments?.allPayment\r\n  );\r\n  useEffect(() => {\r\n    if (user?.accountNumber) {\r\n      const data = {\r\n        accountNumber: user?.accountNumber,\r\n      };\r\n      getAllPayment(data, dispatch);\r\n    }\r\n  }, []);\r\n  const renderMoney = (m) => {\r\n    return Number(m).toLocaleString(\"it-IT\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n    });\r\n  };\r\n  console.log(listPayment);\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <div className=\"home-top home-padding\">{user.fullName} </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"home-page-main\">\r\n        <div className=\"home-page-width\">\r\n          {listPayment &&\r\n            Object.keys(listPayment)?.map((item) => {\r\n              return (\r\n                <>\r\n                  <div className=\"home-row-2 pl-2 bg-date  f-left \">{item}</div>\r\n                  <>\r\n                    {listPayment[item].map((content) => {\r\n                      return (\r\n                        <button className=\"button-page-home color-btn-history history-content\">\r\n                          <div className=\"home-row-2\">\r\n                            <div className=\"\">\r\n                              <div className=\"text-start\">\r\n                                {user.accountNumber == content.fromAcc\r\n                                  ? \"Chuyển tiền\"\r\n                                  : \"Nhận tiền\"}\r\n                              </div>\r\n                              <div className=\"text-start\">\r\n                                <span className=\"text-content-history\">\r\n                                  Số tài khoản: {user?.accountNumber}{\" \"}\r\n                                  {user.accountNumber == content.fromAcc\r\n                                    ? `| ${content.fullNameTo}`\r\n                                    : `| ${content.fullNameFr}`}\r\n                                  {content.description &&\r\n                                    ` | Nd: ${content.description}`}{\" \"}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"home-col-d-column\">\r\n                              {user.accountNumber == content.fromAcc\r\n                                ? `- ${renderMoney(content.amount)} `\r\n                                : `+ ${renderMoney(content.amount)}`}\r\n                            </div>\r\n                          </div>\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </>\r\n                </>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HistoryPayment;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { getAllPost, storePost } from \"../../redux/apiRequest\";\r\n\r\nimport \"./createSim.css\";\r\n\r\nconst CreateSim = () => {\r\n  //DUMMY DATA\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n  const load = useSelector((state) => state.postSim.storePost?.isFetching);\r\n\r\n  const navigate = useNavigate();\r\n  //const status = useSelector((state) => state.auth.MoveMoney?.success);\r\n  const [nameSim, setNameSim] = useState(\"\");\r\n  const [amountStart, setAmountStart] = useState(\"\");\r\n  const [flagAmount, setFlagAmount] = useState(false);\r\n  const [flagSim, setFlagSim] = useState(false);\r\n  const [errorSim, setErrorSim] = useState(\"\");\r\n  const [errorAmount, setErrorAmount] = useState(\"\");\r\n\r\n  const [timeSession, setTimeSession] = useState(\"3600\");\r\n  var regexPhone = /(09|01|03|07|08)[0-9]{8}$/;\r\n\r\n  const dispatch = useDispatch();\r\n  var reg = /^\\d+$/;\r\n  const handleChangeSim = (e) => {\r\n    setErrorSim(\"\");\r\n    setNameSim(e.target.value);\r\n    if (!reg.test(e.target.value)) {\r\n      setFlagSim(false);\r\n      setErrorSim(\"Không được nhập kí tự chữ\");\r\n    } else if (e.target.value.trim().length == 0) {\r\n      setFlagSim(false);\r\n      setErrorSim(\"Vui lòng nhập sim\");\r\n    } else if (e.target.value.length != 10) {\r\n      setFlagSim(false);\r\n      setErrorSim(\"Vui lòng nhập đúng sim\");\r\n    } else if (!regexPhone.test(e.target.value)) {\r\n      setFlagSim(false);\r\n      setErrorSim(\"Vui lòng nhập đúng sim\");\r\n    } else {\r\n      setFlagSim(true);\r\n    }\r\n  };\r\n  const handleChangeAmount = (e) => {\r\n    setErrorAmount(\"\");\r\n    setAmountStart(e.target.value);\r\n    if (!reg.test(e.target.value)) {\r\n      setFlagAmount(false);\r\n      setErrorAmount(\"Không được nhập kí tự chữ\");\r\n    } else if (e.target.value.trim().length == 0) {\r\n      setFlagAmount(false);\r\n      setErrorAmount(\"Vui lòng nhập giá khởi đầu\");\r\n    } else if (e.target.value.length < 6) {\r\n      setFlagAmount(false);\r\n      setErrorAmount(\"Giá khởi đầu phải lớn hơn 100.000VND\");\r\n    } else {\r\n      setFlagAmount(true);\r\n    }\r\n  };\r\n  const handleStorePost = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (flagAmount && flagSim) {\r\n      const newUser2 = {\r\n        nameSim: nameSim,\r\n        amountStart: amountStart,\r\n        timeSession: timeSession,\r\n        user_id: user.id,\r\n      };\r\n      storePost(newUser2, dispatch, navigate);\r\n    }\r\n  };\r\n\r\n  const renderText = () => {\r\n    if (load) {\r\n      return (\r\n        <div className=\"heigh-main\">\r\n          <div class=\"loader \">Loading... </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"form-padding\">\r\n          <label className=\"f-left\">Số sim đấu giá</label>\r\n          <input\r\n            className=\"full-width input-payment\"\r\n            placeholder=\"Nhập số sim đấu giá\"\r\n            onChange={handleChangeSim}\r\n            value={nameSim}\r\n          />\r\n          {errorSim && <small className=\"register-error\">{errorSim}</small>}\r\n          <label className=\"f-left\">Số tiền khởi đầu</label>\r\n          <input\r\n            className=\"full-width input-payment\"\r\n            placeholder=\"Số tiền (VND)\"\r\n            onChange={handleChangeAmount}\r\n            value={amountStart}\r\n          />\r\n          {errorAmount && (\r\n            <small className=\"register-error\">{errorAmount}</small>\r\n          )}\r\n\r\n          <label className=\"f-left\">Thời gian đấu giá</label>\r\n          <select\r\n            className=\"full-width input-payment\"\r\n            onChange={(e) => setTimeSession(e.target.value)}\r\n            value={timeSession}\r\n          >\r\n            <option value=\"3600\">1 giờ</option>\r\n            <option value=\"10800\">3 giờ</option>\r\n            <option value=\"21600\">6 giờ</option>\r\n            <option value=\"43200\">12 giờ</option>\r\n            <option value=\"86400\">1 ngày</option>\r\n          </select>\r\n\r\n          <div className=\"home-row around-between\">\r\n            <Link to=\"/post-sim\" className=\"full-width m-1 \">\r\n              <button className=\"full-width m-1 \">Quay lại</button>\r\n            </Link>\r\n            <button className=\"full-width m-1 \">Tạo đấu giá</button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <div className=\"home-top home-padding\">{user.fullName} </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"home-page-main\">\r\n        <div className=\"home-page-width1 mt-2 \">\r\n          <h3> Đấu giá</h3>\r\n          <form className=\"form-padding \" onSubmit={handleStorePost}>\r\n            {renderText()}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateSim;\r\n","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UseButtonCountdown = ({\r\n  targetDate,\r\n  id,\r\n  setIdRoom,\r\n  changeData,\r\n  fullName,\r\n  winner,\r\n  setNameSim,\r\n  sim,\r\n  user_id,\r\n  setUserID,\r\n}) => {\r\n  const countDownDate = new Date(targetDate).getTime();\r\n\r\n  const [countDown, setCountDown] = useState(\r\n    countDownDate - new Date().getTime()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (countDown <= 0) {\r\n      return;\r\n    }\r\n    const interval = setInterval(() => {\r\n      setCountDown(countDownDate - new Date().getTime());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [countDown]);\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {countDown <= 0 ? (\r\n        <>\r\n          {winner == null || fullName == undefined ? (\r\n            <>Không có người tham gia</>\r\n          ) : (\r\n            <> Người thắng {fullName}</>\r\n          )}\r\n        </>\r\n      ) : (\r\n        getReturnValues(\r\n          countDown,\r\n          id,\r\n          setIdRoom,\r\n          changeData,\r\n          setNameSim,\r\n          sim,\r\n          user_id,\r\n          setUserID\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getReturnValues = (\r\n  countDown,\r\n  id,\r\n  setIdRoom,\r\n  changeData,\r\n  setNameSim,\r\n  sim,\r\n  user_id,\r\n  setUserID\r\n) => {\r\n  // const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n  return (\r\n    <button\r\n      onClick={(e) =>\r\n        changeData(id, setIdRoom, setNameSim, sim, user_id, setUserID)\r\n      }\r\n    >\r\n      Tham gia đấu giá\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UseButtonCountdown;\r\n","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nconst UseCountdown = (props) => {\r\n  const countDownDate = new Date(props.targetDate).getTime();\r\n\r\n  const [countDown, setCountDown] = useState(\r\n    countDownDate - new Date().getTime()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (countDown <= 0) {\r\n      return;\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      setCountDown(countDownDate - new Date().getTime() + props.increaseTime);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [countDown]);\r\n\r\n  return <> {countDown <= 0 ? \"Đã kết thúc\" : getReturnValues(countDown)}</>;\r\n};\r\n\r\nconst getReturnValues = (countDown) => {\r\n  // const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n  return `${hours.toString().padStart(2, \"0\")}:${minutes\r\n    .toString()\r\n    .padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\r\n};\r\n\r\nexport default UseCountdown;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./modal.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Modal = ({\r\n  isShowing,\r\n  hide,\r\n  phone,\r\n  user_id,\r\n  idRoom,\r\n  nameSim,\r\n  userID,\r\n}) => {\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n\r\n  const [OTP, setOTP] = useState(false);\r\n  const [ErrorOTP, setErrorOTP] = useState(\"\");\r\n  const [flagOTP, setFlagOTP] = useState(false);\r\n  const handleChangeOTP = (e) => {\r\n    setOTP(e.target.value);\r\n    setErrorOTP(\"\");\r\n  };\r\n  const navigate = useNavigate();\r\n  const authCode = (OTP) => {\r\n    if (OTP.length == 6) {\r\n      let confirmationResult = window.confirmationResult;\r\n      confirmationResult\r\n        .confirm(OTP)\r\n        .then((result) => {\r\n          // const user = result.user;\r\n          // console.log(user);\r\n          console.log(\"thanh cong\");\r\n\r\n          navigate(`/post-sim/${idRoom}`, {\r\n            state: { sim: nameSim, userID: userID, isAccess: true },\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setErrorOTP(\"Mã OTP không đúng\");\r\n        });\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    authCode(OTP);\r\n  };\r\n  return isShowing\r\n    ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n          <div className=\"modal-overlay\" />\r\n          <div\r\n            className=\"modal-wrapper\"\r\n            aria-modal\r\n            aria-hidden\r\n            tabIndex={-1}\r\n            role=\"dialog\"\r\n          >\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <div className=\"mt-2\">\r\n                  {\" \"}\r\n                  Nhập mã OTP trước khi vào phòng #{idRoom}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"modal-close-button\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={hide}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <form onSubmit={handleSubmit} className=\"w-100\">\r\n                <label className=\"f-left\">Nhập mã OTP từ số {phone}</label>\r\n                <input\r\n                  className=\"full-width input-payment\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nhập OTP\"\r\n                  onChange={handleChangeOTP}\r\n                />\r\n                <small className=\"register-error\">{ErrorOTP}</small>\r\n                <div className=\"modal-header w-100\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"modal-close-button\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                    onClick={hide}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button type=\"submit\" className=\"modal-close-button\">\r\n                    Xác nhận\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>,\r\n        document.body\r\n      )\r\n    : null;\r\n};\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { moveMoney } from \"../redux/apiRequest\";\r\nimport { authentication } from \"../firebase\";\r\nimport { RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\r\nconst useModal = () => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const toggle = () => {\r\n    setIsShowing(!isShowing);\r\n  };\r\n  const changeData = async (\r\n    ids,\r\n    setID,\r\n    setNameSim,\r\n    sim,\r\n    user_id,\r\n    setUserId\r\n  ) => {\r\n    toggle();\r\n\r\n    setID(ids);\r\n    setNameSim(sim);\r\n\r\n    setUserId(user_id);\r\n\r\n    setIsShowing(!isShowing);\r\n\r\n    if (user.id != user_id) {\r\n      const newUser = {\r\n        id: user.id,\r\n        toAc: \"045704070000307\",\r\n      };\r\n\r\n      window.recaptchaVerifier = new RecaptchaVerifier(\r\n        \"recapcha\",\r\n        {\r\n          size: \"invisible\",\r\n          callback: (response) => {\r\n            // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          },\r\n        },\r\n        authentication\r\n      );\r\n\r\n      let appVerifier = window.recaptchaVerifier;\r\n      signInWithPhoneNumber(\r\n        authentication,\r\n        \"+84\" + user.phone.slice(1),\r\n\r\n        appVerifier\r\n      )\r\n        .then((confirmationResult) => {\r\n          window.confirmationResult = confirmationResult;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      navigate(`/post-sim/${ids}`, {\r\n        state: { sim: sim, userID: user_id, isAccess: true },\r\n      });\r\n    }\r\n  };\r\n  return {\r\n    isShowing,\r\n    toggle,\r\n    changeData,\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport UseButtonCountdown from \"../../CountTime/UseButtonCountdown\";\r\n\r\nimport UseCountdown from \"../../CountTime/UseCountdown\";\r\nimport Modal from \"../../Modal/Modal\";\r\nimport useModal from \"../../Modal/useModal\";\r\nimport { getAllPost } from \"../../redux/apiRequest\";\r\n\r\nimport \"./postSims.css\";\r\n\r\nconst PostSims = () => {\r\n  const { state } = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (state?.showToast) {\r\n      toast.success(\"Tạo đấu giá thành công\");\r\n    }\r\n  }, [state]);\r\n\r\n  const { isShowing, toggle, changeData } = useModal();\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState(null);\r\n  const [idRoom, setIdRoom] = useState(\"\");\r\n  const [nameSim, setNameSim] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllPost(dispatch).then((k) => {\r\n      setData(k);\r\n    });\r\n  }, []);\r\n  const convertMoney = (money) => {\r\n    return Number(money).toLocaleString(\"it-IT\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n    });\r\n  };\r\n  const convertTime = (CREATED_TIME, TIME_EXPIRE) => {\r\n    const timeCreate = new Date(CREATED_TIME).getTime();\r\n\r\n    const dateTime = timeCreate + Number(TIME_EXPIRE) * 1000;\r\n\r\n    return dateTime;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isShowing={isShowing}\r\n        hide={toggle}\r\n        phone={user?.phone}\r\n        user_id={user.id}\r\n        idRoom={idRoom}\r\n        nameSim={nameSim}\r\n        userID={userID}\r\n      />\r\n      <ToastContainer />\r\n      {user ? (\r\n        <div className=\"home-top home-padding\">{user.fullName} </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"home-page-main\">\r\n        <div className=\"home-page-width\">\r\n          <div className=\"home-row\">\r\n            <div className=\"center-post-sim\">\r\n              <Link to=\"/\">\r\n                <button className=\"btn-create-post\"> Về trang chủ</button>{\" \"}\r\n              </Link>\r\n              <Link to=\"/create-post-sim\">\r\n                <button className=\"btn-create-post\"> Tạo đấu giá</button>{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"home-row\">\r\n            <div className=\"home-col\">\r\n              <Link to=\"/post-by-user\">\r\n                <button className=\"home-btn\">Đấu giá của bạn</button>\r\n              </Link>\r\n            </div>\r\n            <div className=\"home-col\">\r\n              {\" \"}\r\n              <Link to=\"/post-reward\">\r\n                <button className=\"home-btn\">Đấu giá thắng</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"home-row-2\">\r\n            <div className=\"\">\r\n              <h3>Danh sách đấu giá đang diễn ra</h3>\r\n            </div>\r\n          </div>\r\n          {data != null ? (\r\n            <>\r\n              {data?.map((item) => {\r\n                return (\r\n                  <>\r\n                    <button className=\"button-page-home cursor-disable\">\r\n                      <div className=\"home-row-2\">\r\n                        <div className=\"\">\r\n                          <div className=\"text-start\">Sim: {item.nameSim}</div>\r\n\r\n                          <div className=\"text-start d-flex\">\r\n                            <span>Thời gian còn:</span>\r\n                            <UseCountdown\r\n                              targetDate={convertTime(\r\n                                item.created_at,\r\n                                item.timeSession\r\n                              )}\r\n                              increaseTime={0}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"home-col-d-column\">\r\n                          Mốc tiền hiện tại:{\" \"}\r\n                          {item.sumAmount\r\n                            ? convertMoney(item.sumAmount)\r\n                            : convertMoney(item.amountStart)}\r\n                        </div>\r\n                      </div>\r\n                      {user.money < 1000000 ? (\r\n                        <>Bạn không đủ để tham gia đấu giá chơi</>\r\n                      ) : (\r\n                        <UseButtonCountdown\r\n                          targetDate={convertTime(\r\n                            item.created_at,\r\n                            item.timeSession\r\n                          )}\r\n                          fullName={item?.winnerName}\r\n                          id={item.id}\r\n                          CREATED_TIME={item.created_at}\r\n                          TIME_EXPIRE={item.timeSession}\r\n                          winner={item.winner}\r\n                          setIdRoom={setIdRoom}\r\n                          changeData={changeData}\r\n                          setNameSim={setNameSim}\r\n                          sim={item.nameSim}\r\n                          user_id={item.user_id}\r\n                          setUserID={setUserID}\r\n                        />\r\n                      )}\r\n                    </button>\r\n                  </>\r\n                );\r\n              })}\r\n            </>\r\n          ) : (\r\n            <>Không tìm thấy!!</>\r\n          )}\r\n        </div>\r\n        <div id=\"recapcha\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostSims;\r\n","import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UseButtonRise = ({ targetDate, timeClick, increaseTime }) => {\r\n  const countDownDate = new Date(targetDate).getTime();\r\n\r\n  const [countDown, setCountDown] = useState(\r\n    countDownDate - new Date().getTime()\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (countDown <= 0) {\r\n      return;\r\n    }\r\n    const interval = setInterval(() => {\r\n      setCountDown(countDownDate - new Date().getTime() + increaseTime);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [countDown]);\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {countDown <= 0 ? (\r\n        <div style={{ margin: \"auto\" }}>Đã hết thời gian</div>\r\n      ) : (\r\n        getReturnValues(countDown, timeClick)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getReturnValues = (countDown, timeClick) => {\r\n  // const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n  return (\r\n    <button disabled={timeClick}>\r\n      <i className=\"material-icons\">\r\n        {\" \"}\r\n        {timeClick ? \"Vui lòng đợi 5s \" : \"Đấu giá\"}\r\n      </i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default UseButtonRise;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport Echo from \"laravel-echo\";\r\n\r\nimport \"./postSim.scss\";\r\nimport { showEach } from \"../../redux/apiRequest\";\r\nimport UseCountdown from \"../../CountTime/UseCountdown\";\r\nimport UseButtonRise from \"../../CountTime/UseButtonRise\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nconst PostSim = () => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  if (!state?.isAccess) {\r\n    navigate(\"/post-sim\");\r\n  }\r\n\r\n  window.io = require(\"socket.io-client\");\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n  const list = useSelector((state) => state.postSim.getAllPost?.allPostSim);\r\n  const params = useParams();\r\n  const [listMsg, setListMsg] = useState([]);\r\n  const [isLoad, setIsLoad] = useState(true);\r\n  const [moneyCurrent, setMoneyCurrent] = useState(0);\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const [timeClick, setTimeClick] = useState(false);\r\n  const [flagAmount, setFlagAmount] = useState(false);\r\n  const [increaseTime, setIncreaseTime] = useState(0);\r\n\r\n  const handleChangeAmount = (e) => {\r\n    setAmount(e.target.value);\r\n    setFlagAmount(true);\r\n    if (e.target.value > user.money) {\r\n      setFlagAmount(false);\r\n      toast.error(\"Tài khoản không đủ....\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e, created_at, timeSession) => {\r\n    e.preventDefault();\r\n    if (amount == 0) {\r\n      setFlagAmount(false);\r\n      toast.error(\"Vui lòng chọn giá\");\r\n    }\r\n    if (flagAmount) {\r\n      setTimeClick(true);\r\n      setTimeout(() => {\r\n        setTimeClick(false);\r\n      }, 5000);\r\n      const data = {\r\n        user_id: user.id,\r\n        post_id: params.id,\r\n        amount: amount,\r\n      };\r\n      if (\r\n        convertTime(created_at, timeSession) - new Date().getTime() <=\r\n        60 * 1000\r\n      ) {\r\n        setIncreaseTime((item) => item + 60 * 5 * 1000);\r\n      }\r\n\r\n      await axios.post(\"https://mfw060.wcom.vn/api/sendAmount\", data);\r\n    }\r\n  };\r\n\r\n  const findMoney = list.find((i) => i.id == params.id);\r\n\r\n  const convertTime = (CREATED_TIME, TIME_EXPIRE) => {\r\n    const timeCreate = new Date(CREATED_TIME).getTime();\r\n\r\n    const dateTime = timeCreate + Number(TIME_EXPIRE) * 1000;\r\n\r\n    return dateTime;\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const data = {\r\n      post_id: params.id,\r\n    };\r\n    window.echo = new Echo({\r\n      broadcaster: \"socket.io\",\r\n      // host: window.location.hostname + \":6001\",\r\n    });\r\n\r\n    window.echo\r\n      .channel(`post.${params.id}`)\r\n\r\n      .listen(\"MessagePosted\", (e) => {\r\n        const data = {\r\n          user_id: e.user,\r\n          post_id: e.post_id,\r\n          amount: e.message,\r\n          created_at: e.time,\r\n        };\r\n        setListMsg((oldArray) => [data, ...oldArray]);\r\n        console.log(e);\r\n      });\r\n    const check = await showEach(data);\r\n    setMoneyCurrent(findMoney?.amountStart);\r\n    await setListMsg(check);\r\n    setIsLoad(false);\r\n  }, []);\r\n\r\n  var sum = findMoney?.amountStart;\r\n  const renderMoney = () => {\r\n    listMsg?.forEach((e) => {\r\n      sum = parseInt(sum) + parseInt(e.amount);\r\n    });\r\n    return Number(sum).toLocaleString(\"it-IT\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n    });\r\n  };\r\n  const convertMoney = (money) => {\r\n    return Number(money).toLocaleString(\"it-IT\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n    });\r\n  };\r\n  const converDateTime = (time) => {\r\n    const dt = new Date(time);\r\n    return dt.toLocaleString();\r\n  };\r\n  var x = Number(findMoney?.amountStart).toLocaleString(\"it-IT\", {\r\n    style: \"currency\",\r\n    currency: \"VND\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {isLoad ? (\r\n        <div className=\"heigh-main\">\r\n          <div class=\"loader \">Loading... </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"home-page-main\">\r\n          <div className=\"app\">\r\n            <div className=\"messages\">\r\n              <div>\r\n                <div>sim: {state?.sim}</div>\r\n                Giá khởi điểm:{x} - Giá đã lên: {renderMoney()} -\r\n                <UseCountdown\r\n                  targetDate={convertTime(\r\n                    findMoney.created_at,\r\n                    findMoney.timeSession\r\n                  )}\r\n                  increaseTime={increaseTime}\r\n                />\r\n              </div>\r\n              <div className=\"messages-history\">\r\n                {listMsg?.map((item) => {\r\n                  return (\r\n                    <div\r\n                      className={\r\n                        \"message \" + (item.user_id == user.id ? \"me\" : \"\")\r\n                      }\r\n                    >\r\n                      <div class=\"message-body\">\r\n                        <div> + {convertMoney(item.amount)}</div>{\" \"}\r\n                        <small>{converDateTime(item.created_at)}</small>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {user.id == state?.userID ? (\r\n                <>Là chủ vật phẩm không thể đấu giá - chỉ xem</>\r\n              ) : (\r\n                <form\r\n                  className=\"messages-inputs\"\r\n                  onSubmit={(e) =>\r\n                    handleSubmit(e, findMoney.created_at, findMoney.timeSession)\r\n                  }\r\n                >\r\n                  <div class=\"selector\">\r\n                    <span class=\"selecotr-item\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"radio1\"\r\n                        class=\"selector-item_radio\"\r\n                        name=\"group1\"\r\n                        value=\"100000\"\r\n                        onChange={handleChangeAmount}\r\n                      />\r\n                      <label for=\"radio1\" class=\"selector-item_label\">\r\n                        100.000\r\n                      </label>\r\n                    </span>\r\n                    <span class=\"selecotr-item\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"radio2\"\r\n                        name=\"group1\"\r\n                        class=\"selector-item_radio\"\r\n                        value=\"200000\"\r\n                        onChange={handleChangeAmount}\r\n                      />\r\n                      <label for=\"radio2\" class=\"selector-item_label\">\r\n                        200.000\r\n                      </label>\r\n                    </span>\r\n                    <span class=\"selecotr-item\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"radio3\"\r\n                        name=\"group1\"\r\n                        class=\"selector-item_radio\"\r\n                        value=\"500000\"\r\n                        onChange={handleChangeAmount}\r\n                      />\r\n                      <label for=\"radio3\" class=\"selector-item_label\">\r\n                        500.000\r\n                      </label>\r\n                    </span>\r\n                  </div>\r\n                  <UseButtonRise\r\n                    targetDate={convertTime(\r\n                      findMoney.created_at,\r\n                      findMoney.timeSession\r\n                    )}\r\n                    increaseTime={increaseTime}\r\n                    timeClick={timeClick}\r\n                  />\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Link to=\"/post-sim\">\r\n        {\" \"}\r\n        <button>Trở về trang trước</button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostSim;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\n\r\nconst useAuth = () => {\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n  return user;\r\n};\r\n\r\nconst ProtectedRoutes = () => {\r\n  const isAuth = useAuth();\r\n  return isAuth ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoutes;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\n\r\nconst useAuth = () => {\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n  return user;\r\n};\r\n\r\nconst ProtectedRoutesLog = () => {\r\n  const isAuth = useAuth();\r\n  return isAuth ? <Navigate to=\"/\" /> : <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoutesLog;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport UseButtonCountdown from \"../../CountTime/UseButtonCountdown\";\r\n\r\nimport UseCountdown from \"../../CountTime/UseCountdown\";\r\nimport Modal from \"../../Modal/Modal\";\r\nimport useModal from \"../../Modal/useModal\";\r\nimport { getAllPost } from \"../../redux/apiRequest\";\r\n\r\nimport \"./postSims.css\";\r\n\r\nconst PostReward = () => {\r\n  const { state } = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (state?.showToast) {\r\n      toast.success(\"Tạo đấu giá thành công\");\r\n    }\r\n  }, [state]);\r\n\r\n  const { isShowing, toggle, changeData } = useModal();\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState();\r\n  const [idRoom, setIdRoom] = useState(\"\");\r\n  const [nameSim, setNameSim] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const getPostUser = async () => {\r\n    const data = {\r\n      id: user?.id,\r\n    };\r\n    return await axios.post(\"https://mfw060.wcom.vn/api/showPostReward\", data);\r\n  };\r\n  useEffect(() => {\r\n    getPostUser().then((k) => {\r\n      console.log(k.data);\r\n      setData(k.data);\r\n    });\r\n  }, []);\r\n  const convertMoney = (money) => {\r\n    return Number(money).toLocaleString(\"it-IT\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n    });\r\n  };\r\n  const convertTime = (CREATED_TIME, TIME_EXPIRE) => {\r\n    const timeCreate = new Date(CREATED_TIME).getTime();\r\n\r\n    const dateTime = timeCreate + Number(TIME_EXPIRE) * 1000;\r\n\r\n    return dateTime;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isShowing={isShowing}\r\n        hide={toggle}\r\n        phone={user?.phone}\r\n        user_id={user.id}\r\n        idRoom={idRoom}\r\n        nameSim={nameSim}\r\n        userID={userID}\r\n      />\r\n      <ToastContainer />\r\n      {user ? (\r\n        <div className=\"home-top home-padding\">{user.fullName} </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"home-page-main\">\r\n        <div className=\"home-page-width\">\r\n          <div className=\"home-row\">\r\n            <div className=\"center-post-sim\">\r\n              <Link to=\"/post-sim\">\r\n                <button className=\"btn-create-post\"> Về trang trước</button>{\" \"}\r\n              </Link>\r\n              <Link to=\"/create-post-sim\">\r\n                <button className=\"btn-create-post\"> Tạo đấu giá</button>{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"home-row\">\r\n            <div className=\"home-col\">\r\n              <Link to=\"/post-by-user\">\r\n                <button className=\"home-btn\">Đấu giá của bạn</button>\r\n              </Link>\r\n            </div>\r\n            <div className=\"home-col\">\r\n              {\" \"}\r\n              <Link to=\"/post-reward\">\r\n                <button className=\"home-btn\">Đấu giá thắng</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"home-row-2\">\r\n            <div className=\"\">\r\n              <h3>Danh sách đấu giá đã tạo</h3>\r\n            </div>\r\n          </div>\r\n          {data ? (\r\n            <>\r\n              {\" \"}\r\n              {data?.map((item) => {\r\n                return (\r\n                  <>\r\n                    <button className=\"button-page-home cursor-disable\">\r\n                      <div className=\"home-row-2\">\r\n                        <div className=\"\">\r\n                          <div className=\"text-start\">Sim: {item.nameSim}</div>\r\n\r\n                          <div className=\"text-start d-flex\">\r\n                            <span>Thời gian còn:</span>\r\n                            <UseCountdown\r\n                              targetDate={convertTime(\r\n                                item.created_at,\r\n                                item.timeSession\r\n                              )}\r\n                              increaseTime={0}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"home-col-d-column\">\r\n                          Mốc tiền hiện tại:{\" \"}\r\n                          {item.sumAmount\r\n                            ? convertMoney(item.sumAmount)\r\n                            : convertMoney(item.amountStart)}\r\n                        </div>\r\n                      </div>\r\n                      {user.money < 1000000 ? (\r\n                        <>Bạn không đủ để tham gia đấu giá chơi</>\r\n                      ) : (\r\n                        <UseButtonCountdown\r\n                          targetDate={convertTime(\r\n                            item.created_at,\r\n                            item.timeSession\r\n                          )}\r\n                          fullName={item?.winnerName}\r\n                          id={item.id}\r\n                          CREATED_TIME={item.created_at}\r\n                          TIME_EXPIRE={item.timeSession}\r\n                          winner={item.winner}\r\n                          setIdRoom={setIdRoom}\r\n                          changeData={changeData}\r\n                          setNameSim={setNameSim}\r\n                          sim={item.nameSim}\r\n                          user_id={item.user_id}\r\n                          setUserID={setUserID}\r\n                        />\r\n                      )}\r\n                    </button>\r\n                  </>\r\n                );\r\n              })}{\" \"}\r\n            </>\r\n          ) : (\r\n            <>Không được tìm thấy!!</>\r\n          )}\r\n        </div>\r\n        <div id=\"recapcha\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostReward;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport UseButtonCountdown from \"../../CountTime/UseButtonCountdown\";\r\n\r\nimport UseCountdown from \"../../CountTime/UseCountdown\";\r\nimport Modal from \"../../Modal/Modal\";\r\nimport useModal from \"../../Modal/useModal\";\r\nimport { getAllPost } from \"../../redux/apiRequest\";\r\n\r\nimport \"./postSims.css\";\r\n\r\nconst PostByUser = () => {\r\n  const { state } = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (state?.showToast) {\r\n      toast.success(\"Tạo đấu giá thành công\");\r\n    }\r\n  }, [state]);\r\n\r\n  const { isShowing, toggle, changeData } = useModal();\r\n  const user = useSelector((state) => state.auth.login?.currentUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [data, setData] = useState();\r\n  const [idRoom, setIdRoom] = useState(\"\");\r\n  const [nameSim, setNameSim] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const getPostUser = async () => {\r\n    const data = {\r\n      id: user?.id,\r\n    };\r\n    return await axios.post(\"https://mfw060.wcom.vn/api/showPostUser\", data);\r\n  };\r\n  useEffect(() => {\r\n    getPostUser().then((k) => {\r\n      console.log(k.data);\r\n      setData(k.data);\r\n    });\r\n  }, []);\r\n  const convertMoney = (money) => {\r\n    return Number(money).toLocaleString(\"it-IT\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n    });\r\n  };\r\n  const convertTime = (CREATED_TIME, TIME_EXPIRE) => {\r\n    const timeCreate = new Date(CREATED_TIME).getTime();\r\n\r\n    const dateTime = timeCreate + Number(TIME_EXPIRE) * 1000;\r\n\r\n    return dateTime;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isShowing={isShowing}\r\n        hide={toggle}\r\n        phone={user?.phone}\r\n        user_id={user.id}\r\n        idRoom={idRoom}\r\n        nameSim={nameSim}\r\n        userID={userID}\r\n      />\r\n      <ToastContainer />\r\n      {user ? (\r\n        <div className=\"home-top home-padding\">{user.fullName} </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"home-page-main\">\r\n        <div className=\"home-page-width\">\r\n          <div className=\"home-row\">\r\n            <div className=\"center-post-sim\">\r\n              <Link to=\"/post-sim\">\r\n                <button className=\"btn-create-post\"> Về trang trước</button>{\" \"}\r\n              </Link>\r\n              <Link to=\"/create-post-sim\">\r\n                <button className=\"btn-create-post\"> Tạo đấu giá</button>{\" \"}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"home-row\">\r\n            <div className=\"home-col\">\r\n              <Link to=\"/post-by-user\">\r\n                <button className=\"home-btn\">Đấu giá của bạn</button>\r\n              </Link>\r\n            </div>\r\n            <div className=\"home-col\">\r\n              {\" \"}\r\n              <Link to=\"/post-reward\">\r\n                <button className=\"home-btn\">Đấu giá thắng</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"home-row-2\">\r\n            <div className=\"\">\r\n              <h3>Danh sách đấu giá đã tạo</h3>\r\n            </div>\r\n          </div>\r\n          {data ? (\r\n            <>\r\n              {\" \"}\r\n              {data?.map((item) => {\r\n                return (\r\n                  <>\r\n                    <button className=\"button-page-home cursor-disable\">\r\n                      <div className=\"home-row-2\">\r\n                        <div className=\"\">\r\n                          <div className=\"text-start\">Sim: {item.nameSim}</div>\r\n\r\n                          <div className=\"text-start d-flex\">\r\n                            <span>Thời gian còn:</span>\r\n                            <UseCountdown\r\n                              targetDate={convertTime(\r\n                                item.created_at,\r\n                                item.timeSession\r\n                              )}\r\n                              increaseTime={0}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"home-col-d-column\">\r\n                          Mốc tiền hiện tại:{\" \"}\r\n                          {item.sumAmount\r\n                            ? convertMoney(item.sumAmount)\r\n                            : convertMoney(item.amountStart)}\r\n                        </div>\r\n                      </div>\r\n                      {user.money < 1000000 ? (\r\n                        <>Bạn không đủ để tham gia đấu giá chơi</>\r\n                      ) : (\r\n                        <UseButtonCountdown\r\n                          targetDate={convertTime(\r\n                            item.created_at,\r\n                            item.timeSession\r\n                          )}\r\n                          fullName={item?.winnerName}\r\n                          id={item.id}\r\n                          CREATED_TIME={item.created_at}\r\n                          TIME_EXPIRE={item.timeSession}\r\n                          winner={item.winner}\r\n                          setIdRoom={setIdRoom}\r\n                          changeData={changeData}\r\n                          setNameSim={setNameSim}\r\n                          sim={item.nameSim}\r\n                          user_id={item.user_id}\r\n                          setUserID={setUserID}\r\n                        />\r\n                      )}\r\n                    </button>\r\n                  </>\r\n                );\r\n              })}\r\n            </>\r\n          ) : (\r\n            <>Không được tìm thấy!!</>\r\n          )}\r\n        </div>\r\n        <div id=\"recapcha\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostByUser;\r\n","import \"./App.css\";\nimport HomePage from \"./Components/Home/HomePage\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport Login from \"./Components/Login/Login\";\nimport Register from \"./Components/Register/Register\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport { useState } from \"react\";\nimport MoveMoney from \"./Components/MoveMoney/MoveMoney\";\nimport HistoryPayment from \"./Components/HistoryPayment/HistoryPayment\";\n\nimport CreateSim from \"./Components/PostSim/CreateSim\";\nimport PostSims from \"./Components/PostSim/PostSims\";\nimport PostSim from \"./Components/PostSim/PostSim\";\nimport ProtectedRoutes from \"./ProtectedRoutes\";\nimport ProtectedRoutesLog from \"./ProtectedRoutesLog\";\nimport PostReward from \"./Components/PostSim/PostReward\";\nimport PostByUser from \"./Components/PostSim/PostByUser\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <NavBar />\n      <div className=\"App\">\n        <Routes>\n          <Route element={<ProtectedRoutesLog />}>\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/login\" element={<Login />} />\n          </Route>\n          <Route element={<ProtectedRoutes />}>\n            <Route path=\"/\" element={<HomePage />} />\n\n            <Route path=\"/move-money\" element={<MoveMoney />} />\n            <Route path=\"/history-payment\" element={<HistoryPayment />} />\n            <Route path=\"/post-sim\" element={<PostSims />} />\n\n            <Route path=\"/post-sim/:id\" element={<PostSim />} />\n            <Route path=\"/create-post-sim\" element={<CreateSim />} />\n            <Route path=\"/post-reward\" element={<PostReward />} />\n            <Route path=\"/post-by-user\" element={<PostByUser />} />\n          </Route>\n          <Route path=\"*\" element={<>404 not found</>} />\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./authSlice\";\r\nimport paymentSlice from \"./paymentSlice\";\r\nimport postSimSlice from \"./postSimSlice\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authSlice,\r\n  payment: paymentSlice,\r\n  postSim: postSimSlice,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\nexport let persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}